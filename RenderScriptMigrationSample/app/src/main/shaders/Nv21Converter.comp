#version 450
#pragma shader_stage(compute)

layout (local_size_x_id = 0, local_size_y_id = 1) in;

layout (binding = 0) uniform sampler2D inputImage;
layout (binding = 1, rgba8) uniform writeonly image2D outputImage;


void main() {
    vec3 inputPixel = texture(inputImage, vec2(gl_GlobalInvocationID.xy)).rgb;
    float y = 0.229*inputPixel.r+0.587*inputPixel.g+0.114*inputPixel.b;
    float u = 0.498*inputPixel.r-0.417*inputPixel.g-0.08*inputPixel.b;
    float v = 0.498*inputPixel.b-0.168*inputPixel.r-0.33*inputPixel.g;
    float r = y + 1.4075 * v;
    float g = y - 0.3455 * u - 0.7169*v;
    float b = y + 1.779 * u;
    imageStore(outputImage, ivec2(gl_GlobalInvocationID.xy), vec4(r,g,b, 1.0f));
}
